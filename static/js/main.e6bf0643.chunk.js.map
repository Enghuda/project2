{"version":3,"sources":["Component.js/Data.js","Component.js/PlaceRow.js","Component.js/Placelists.js","App.js","serviceWorker.js","index.js"],"names":["DATA","PlaceRow","addfav","e","props","Addfav","picURL","this","img","title","des","desc","className","alt","src","onClick","clearitem","React","Component","Placelists","handleFilterClick","filter","console","log","setState","handleDeletallClick","clear","handleDeletallClickitem","state","city","allplace","myPlaces","map","ele","id","key","picturepath","nameOfplac","allfa","fav","App","handleAddfavorite","favorites","push","handleClearAll","handleClearItem","index","indexOf","splice","getInput","axios","method","url","then","res","catch","err","places","axdata","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"iRA2CmBA,EA3CP,CAAC,CAET,MAAQ,EACR,WAAa,+BACb,YAAc,oHACd,KAAO,wWAEX,CAEE,MAAQ,EACR,WAAa,mBACb,YAAc,wGACd,KAAO,idAGT,CAEE,MAAQ,EACR,WAAa,6BACb,YAAc,wGACd,KAAO,kdAET,CACE,MAAQ,EACR,WAAa,wBACb,YAAc,wGACd,KAAO,yaAET,CACE,MAAQ,EACR,WAAa,yBACb,YAAc,wGACd,KAAO,saAET,CACE,MAAQ,EACR,WAAa,kCACb,YAAc,wGACd,KAAO,yWChCYC,E,2MAEjBC,OAAS,SAACC,GACN,EAAKC,MAAMC,U,wEAgBX,IAAMC,EAASC,KAAKH,MAAMI,IACpBC,EAAQF,KAAKH,MAAMK,MACnBC,EAAMH,KAAKH,MAAMO,KAGvB,OACI,yBAAKC,UAAU,QAAf,mBACiB,yBAAKA,UAAU,MAAMC,IAAI,OAAOC,IAAKR,IAClD,4BAAKG,GACL,2BAAIC,GAEJ,4BAAQK,QAASR,KAAKL,QAAtB,QACA,4BAAQa,QAASR,KAAKH,MAAMY,WAA5B,iB,GA/BsBC,IAAMC,WCHvBC,E,YAEjB,WAAYf,GAAQ,IAAD,8BACf,4CAAMA,KAOVgB,kBAAoB,SAAAC,GAChBC,QAAQC,IAAI,WAEZ,EAAKC,SAAS,CAAEH,OAAQA,KAXT,EAanBI,oBAAsB,SAACtB,GACnB,EAAKC,MAAMsB,SAdI,EAiBnBC,wBAA0B,SAACxB,GACvB,EAAKC,MAAMY,aAfX,EAAKY,MAAQ,CACTP,OAAQ,OAJG,E,sEAuBT,IA2BFQ,EA3BC,OAECC,EAAWvB,KAAKH,MAAM2B,SAASC,KAAI,SAACC,EAAKC,GAC3C,OAAO,6BACH,kBAAC,EAAD,CAEIC,IAAKD,EACL1B,IAAKyB,EAAIG,YACT3B,MAAOwB,EAAII,WACX1B,KAAMsB,EAAItB,KACVN,OAAQ,kBAAM,EAAKD,MAAMC,OAAO4B,UAItCK,EAAQ/B,KAAKH,MAAMmC,IAAIP,KAAI,SAACC,EAAKC,GACnC,OAAO,6BACH,kBAAC,EAAD,CAEIC,IAAKD,EACL1B,IAAKyB,EAAIG,YACT3B,MAAOwB,EAAII,WACX1B,KAAMsB,EAAItB,KACVN,OAAQ,kBAAM,EAAKD,MAAMC,OAAO4B,IAChCjB,UAAW,kBAAK,EAAKZ,MAAMY,UAAUiB,UAUjD,OAJIJ,EADsB,UAAtBtB,KAAKqB,MAAMP,OACJiB,EAEAR,EAIP,6BACI,yBAAKlB,UAAU,QACf,4BAAQA,UAAU,OAAOG,QAAS,kBAAM,EAAKK,kBAAkB,SAA/D,cACA,4BAAQR,UAAU,OAAOG,QAAS,kBAAM,EAAKK,kBAAkB,WAA/D,eACA,4BAAQR,UAAU,OAAOG,QAAS,kBAAM,EAAKU,wBAA7C,cAKCI,O,GArEuBZ,IAAMC,W,yBCOzBsB,E,YAInB,WAAYpC,GAAQ,IAAD,8BACjB,4CAAMA,KAYRqC,kBAAoB,SAACV,GACnB,IAAMW,EAAS,YAAO,EAAKd,MAAMc,WACjCA,EAAUC,KAAKZ,GAEfT,QAAQC,IAAR,aAAkBQ,EAASM,aAE3B,EAAKb,SAAS,CAAEkB,eAnBC,EAwBnBE,eAAiB,WACf,IAAIF,EAAS,YAAO,EAAKd,MAAMc,WAC/BA,EAAY,GACZpB,QAAQC,IAAR,aACA,EAAKC,SAAS,CAAEkB,eA5BC,EA+BnBG,gBAAkB,SAACZ,GACjB,IAAMS,EAAS,YAAO,EAAKd,MAAMc,WAE3BI,EAAQJ,EAAUK,QAAQd,GAChCS,EAAUM,OAAOF,EAAM,GACvBxB,QAAQC,IAAR,kCAEA,EAAKC,SAAS,CAAEkB,eAtCC,EAyCnBO,SAAW,WACTC,IAAM,CACJC,OAAQ,MACRC,IAAK,qDAEJC,MAAK,SAAAC,GACJhC,QAAQC,IAAI,aAAc+B,MAM3BC,OAAM,SAAAC,GACLlC,QAAQC,IAAI,UAAWiC,OApD3B,EAAK5B,MAAQ,CACX6B,OAAQzD,EACR0C,UAAW,GACXgB,OAAO,IALQ,E,sEA6DjB,OACE,6BACE,wBAAI9C,UAAU,UAAd,kCACA,4BAAQG,QAASR,KAAK0C,UAAtB,cACA,4BAAK1C,KAAKqB,MAAM8B,QAChB,kBAAC,EAAD,CAAY3B,SAAUxB,KAAKqB,MAAM6B,OAC/BlB,IAAKhC,KAAKqB,MAAMc,UAChBrC,OAAQE,KAAKkC,kBACbf,MAAOnB,KAAKqC,eACZ5B,UAAWT,KAAKsC,uB,GA1EO5B,IAAMC,WCEnByC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjB,MAAK,SAAAkB,GACJA,EAAaC,gBAEdjB,OAAM,SAAAkB,GACLnD,QAAQmD,MAAMA,EAAMC,c","file":"static/js/main.e6bf0643.chunk.js","sourcesContent":["const DATA =[{\r\n\r\n    \"index\":0,\r\n    \"nameOfplac\":\"Devil’s Bridge, Germany\",\r\n    \"picturepath\":\"https://img-s-msn-com.akamaized.net/tenant/amp/entityid/AAIoOCz.img?h=582&w=1119&m=6&q=60&u=t&o=f&l=f&x=884&y=617\",\r\n    \"desc\":\"Rakotz Bridge is so pretty it could perhaps more aptly be called “fairy-tale bridge”. But its name, which means Devil’s Bridge, comes from its supernatural associations. The looping structure, in the German town of Kromlau, forms a perfect circle with its watery reflection – a clever trick of engineering that some see as otherworldly.\",\r\n  },\r\n{\r\n  \r\n  \"index\":1,\r\n  \"nameOfplac\":\"Bermuda Triangle\",\r\n  \"picturepath\":\"https://img-s-msn-com.akamaized.net/tenant/amp/entityid/AAIoH8m.img?h=582&w=1119&m=6&q=60&u=t&o=f&l=f\",\r\n  \"desc\":\"As synonymous with mystery as Venice is with canals, the Bermuda Triangle – covering around 500,000 square miles between Bermuda, Miami in Florida and San Juan in Puerto Rico – has seen more than 20 planes and 50 ships crash with no obvious explanation and even some “vanish” completely. Theories range from suggestions of supernatural activity to the more logical hypotheses that it’s down to magnetic compass variation or rogue waves.\",\r\n\r\n},\r\n{\r\n  \r\n  \"index\":2,\r\n  \"nameOfplac\":\"Hoia-Baciu Forest, Romania\",\r\n  \"picturepath\":\"https://img-s-msn-com.akamaized.net/tenant/amp/entityid/AAIoR8g.img?h=582&w=1119&m=6&q=60&u=t&o=f&l=f\",\r\n  \"desc\":\"Pretty much any forest can feel eerie when there’s no one else around and the trees are clung with mist. But Hoia-Baciu dials up the strangeness with crooked trees that twist and turn, as if frozen in dance. Legends tell of alien encounters and people vanishing in the woods (it’s been dubbed “the Bermuda Triangle of Romania”). The biggest mystery of all is The Clearing, a central area where nothing grows – and no one, yet, knows why.\",\r\n},\r\n{\r\n  \"index\":3,\r\n  \"nameOfplac\":\"Kawah Ijen, Indonesia\",\r\n  \"picturepath\":\"https://img-s-msn-com.akamaized.net/tenant/amp/entityid/AAIoT6r.img?h=582&w=1119&m=6&q=60&u=t&o=f&l=f\",\r\n  \"desc\":\"Its milky turquoise waters may look inviting for a swim, but don’t jump in – this caldera, formed in the crater of the Kawah Ijen volcano, is the world’s largest acidic lake. The electric blue flames that burst into the air are a source of fascination, though (of course) there is a scientific explanation: high levels of sulfuric acid, which give the water its striking hue, combust when they hit the air.\",\r\n},\r\n{\r\n  \"index\":4,\r\n  \"nameOfplac\":\"Lake Abraham, Canada  \",\r\n  \"picturepath\":\"https://img-s-msn-com.akamaized.net/tenant/amp/entityid/AAIoLZU.img?h=582&w=1119&m=6&q=60&u=t&o=f&l=f\",\r\n  \"desc\":\"Most of the year, this reservoir in western Alberta is an attractive body of water backed by part of the Canadian Rockies. In chillier months it transforms into a magical winter wonderland when what appear to be Christmassy baubles or snowballs form beneath the surface. The truth is less romantic, as the suspended white orbs are pockets of methane gas formed when organic matter decomposes and is frozen into clumps.\",\r\n},\r\n{\r\n  \"index\":5,\r\n  \"nameOfplac\":\"Moeraki Boulders, New Zealand  \",\r\n  \"picturepath\":\"https://img-s-msn-com.akamaized.net/tenant/amp/entityid/AAIoM07.img?h=582&w=1119&m=6&q=60&u=t&o=f&l=f\",\r\n  \"desc\":\"Ancient Maori legend says these boulders are gourds or food containers, washed ashore from the wreckage of a canoe that brought their ancestors to New Zealand’s South Island. Another theory suggests they are alien eggs. Geology says they formed in sediment on the sea floor around 65 million years ago, eventually choosing Koekohe Beach as their home.\",\r\n}\r\n\r\n]\r\n \r\n    export default DATA;   \r\n","import React from 'react';\r\n//import { IoIosHeart } from 'react-icons/fa';\r\n\r\n\r\n\r\n//\r\nexport default class PlaceRow extends React.Component {\r\n\r\n    addfav = (e) => {\r\n        this.props.Addfav()\r\n    }\r\n    /*  clear = (e) => { \r\n        console.log(' Allclear ')\r\n        this.props.clear()\r\n    \r\n    }\r\n    \r\n    clearitem = (e) => { \r\n      console.log('Allclear ')\r\n      this.props.clearitem()\r\n    \r\n    } */\r\n\r\n    render() {\r\n\r\n        const picURL = this.props.img;\r\n        const title = this.props.title;\r\n        const des = this.props.desc;\r\n\r\n\r\n        return (\r\n            <div className=\"card\"\r\n            >                <img className=\"img\" alt=\"pict\" src={picURL}></img>\r\n                <h4>{title}</h4>\r\n                <p>{des}</p>\r\n\r\n                <button onClick={this.addfav}>Like</button>\r\n                <button onClick={this.props.clearitem}> Remove </button>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React from 'react';\r\nimport PlaceRow from './PlaceRow';\r\n\r\nexport default class Placelists extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            filter: \"all\"\r\n\r\n        };\r\n    }\r\n    handleFilterClick = filter => {\r\n        console.log('Setting')\r\n\r\n        this.setState({ filter: filter });\r\n    };\r\n    handleDeletallClick = (e) => {\r\n        this.props.clear()\r\n\r\n    }\r\n    handleDeletallClickitem = (e) => {\r\n        this.props.clearitem()\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const allplace = this.props.myPlaces.map((ele, id) => {\r\n            return <div>\r\n                <PlaceRow\r\n\r\n                    key={id}\r\n                    img={ele.picturepath}\r\n                    title={ele.nameOfplac}\r\n                    desc={ele.desc}\r\n                    Addfav={() => this.props.Addfav(ele)} \r\n                    />\r\n            </div>\r\n        })\r\n        const allfa = this.props.fav.map((ele, id) => {\r\n            return <div>\r\n                <PlaceRow\r\n\r\n                    key={id}\r\n                    img={ele.picturepath}\r\n                    title={ele.nameOfplac}\r\n                    desc={ele.desc}\r\n                    Addfav={() => this.props.Addfav(ele)} \r\n                    clearitem={() =>this.props.clearitem(ele)}/>\r\n            </div>\r\n        })\r\n\r\n        let city;\r\n        if (this.state.filter === 'myfav') {\r\n            city = allfa;\r\n        } else {\r\n            city = allplace;\r\n        }\r\n        return (\r\n\r\n            <div >\r\n                <div className=\"buto\"> \r\n                <button className=\"buto\" onClick={() => this.handleFilterClick('All')}>All places</button>\r\n                <button className=\"buto\" onClick={() => this.handleFilterClick('myfav')}>My Favorits</button>\r\n                <button className=\"buto\" onClick={() => this.handleDeletallClick()} >Clear All</button>\r\n{/*                 <button className=\"buto\" onClick={() => this.handleDeletallClickitem()} >Clear</button>\r\n */}\r\n                    </div>\r\n\r\n                {city}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport DATA from './Component.js/Data';\nimport Placelists from './Component.js/Placelists';\nimport './App.css';\nimport Favorite from './Component.js/Favorits';\nimport PlaceRow from './Component.js/PlaceRow';\nimport axios from 'axios';\n\n\n\nexport default class App extends React.Component {\n\n\n  //events places\n  constructor(props) {\n    super(props);\n    this.state = {\n      places: DATA,\n      favorites: [], // [{}]\n      axdata:\"\"\n    }\n    //console.log(this.state.places)\n  }\n\n\n\n\n  handleAddfavorite = (myPlaces) => {\n    const favorites = [...this.state.favorites];\n    favorites.push(myPlaces)\n\n    console.log(`add${myPlaces.nameOfplac}`);\n\n    this.setState({ favorites })\n\n  }\n\n  //ha\n  handleClearAll = () => {\n    let favorites = [...this.state.favorites]\n    favorites = []\n    console.log(`all remov`)\n    this.setState({ favorites })\n\n  }\n  handleClearItem = (ele) => {\n    const favorites = [...this.state.favorites];\n    //favorites.pop(myPlaces);\n    const index = favorites.indexOf(ele)\n    favorites.splice(index,1)\n    console.log(`REmov $ {myPlaces.nameOfplac} `);\n\n    this.setState({ favorites }) //call cha\n\n  }\n  getInput = () => {\n    axios({\n      method: 'get',\n      url: \"http://worldtimeapi.org/api/timezone/Asia/Riyadh\"\n    })\n      .then(res => {\n        console.log('RESPONSE: ', res);\n        // console.log('DATA: ', res.data.datetime);\n        // this.setState({\n        //   axdata: res.data.datetime\n        // })\n      })\n      .catch(err => {\n        console.log('ERROR: ', err);\n      });\n  };\n\n  render() {\n\n\n    return (\n      <div>\n        <h1 className=\"titile\"> The Strangest Places on Earth</h1>\n        <button onClick={this.getInput}>plase clik</button>\n        <h1>{this.state.axdata}</h1>\n        <Placelists myPlaces={this.state.places}\n          fav={this.state.favorites}\n          Addfav={this.handleAddfavorite}\n          clear={this.handleClearAll}\n          clearitem={this.handleClearItem}\n        />\n\n\n      </div>\n    )\n  }\n} \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}